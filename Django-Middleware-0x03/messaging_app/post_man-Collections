{
  "info": {
    "name": "messaging_app API",
    "_postman_id": "12345678-abcd-ef00-1234-56789abcdef0",
    "description": "Tests for JWT auth, conversations, messages, filters and permissions.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Login - Get JWT Token",
      "request": {
        "method": "POST",
        "header": [{ "key": "Content-Type", "value": "application/json" }],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"username\": \"testuser\",\n  \"password\": \"testpassword\"\n}"
        },
        "url": {
          "raw": "http://localhost:8000/api/token/",
          "protocol": "http",
          "host": ["localhost"],
          "port": "8000",
          "path": ["api", "token", ""]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "let data = pm.response.json();",
              "pm.environment.set(\"access_token\", data.access);"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Create Conversation",
      "request": {
        "method": "POST",
        "header": [
          { "key": "Authorization", "value": "Bearer {{access_token}}" },
          { "key": "Content-Type", "value": "application/json" }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"participants\": [2]\n}"
        },
        "url": {
          "raw": "http://localhost:8000/api/conversations/",
          "protocol": "http",
          "host": ["localhost"],
          "port": "8000",
          "path": ["api", "conversations", ""]
        }
      }
    },
    {
      "name": "Send Message",
      "request": {
        "method": "POST",
        "header": [
          { "key": "Authorization", "value": "Bearer {{access_token}}" },
          { "key": "Content-Type", "value": "application/json" }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"conversation\": 1,\n  \"text\": \"Hello from testuser!\"\n}"
        },
        "url": {
          "raw": "http://localhost:8000/api/messages/",
          "protocol": "http",
          "host": ["localhost"],
          "port": "8000",
          "path": ["api", "messages", ""]
        }
      }
    },
    {
      "name": "Get My Conversations",
      "request": {
        "method": "GET",
        "header": [
          { "key": "Authorization", "value": "Bearer {{access_token}}" }
        ],
        "url": {
          "raw": "http://localhost:8000/api/conversations/",
          "protocol": "http",
          "host": ["localhost"],
          "port": "8000",
          "path": ["api", "conversations", ""]
        }
      }
    },
    {
      "name": "Get Messages from Conversation (Paginated)",
      "request": {
        "method": "GET",
        "header": [
          { "key": "Authorization", "value": "Bearer {{access_token}}" }
        ],
        "url": {
          "raw": "http://localhost:8000/api/messages/?conversation=1&page=1&start_date=2025-06-01T00:00:00",
          "protocol": "http",
          "host": ["localhost"],
          "port": "8000",
          "path": ["api", "messages", ""],
          "query": [
            { "key": "conversation", "value": "1" },
            { "key": "page", "value": "1" },
            { "key": "start_date", "value": "2025-06-01T00:00:00" }
          ]
        }
      }
    },
    {
      "name": "Unauthorized Access Test",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:8000/api/conversations/",
          "protocol": "http",
          "host": ["localhost"],
          "port": "8000",
          "path": ["api", "conversations", ""]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 401\", function () {",
              "    pm.response.to.have.status(401);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    }
  ]
}
